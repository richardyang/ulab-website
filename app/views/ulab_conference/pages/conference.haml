- content_for(:header) do
  = render "#{current_theme.name}/shared/title"
  - if conference.institution.logo
    %figure
      = image_tag variant(conference.institution.logo.file, resize: '600x600'), width: 200, draggable: false
  %div
    = time_tag conference.dates.min, l(conference.dates.min, format: :long)
    to
    = time_tag conference.dates.max, l(conference.dates.max, format: :long)
  %address<
    = "#{conference.institution.name}"
    = ", #{conference.institution.city}" unless conference.institution.name.include? conference.institution.city

- if has_content?(:sponsors) && content(:sponsors).structure_items.present?
  %h2 Sponsors
  %ul.content-list
    = render content(:sponsors) do |sponsor|
      %li
        - if sponsor.has_content?(:logo) && sponsor.has_content?(:website)
          = link_to sponsor.content(:website) do
            = image_tag variant(sponsor.content(:logo).file, resize: "600x600"), width: 200, draggable: false, alt: sponsor.content(:name)

= render "#{current_theme.name}/shared/gallery" if has_content? :gallery

= content(:text).try(:html_safe)

- if has_content?(:submission_date) && Date.today <= content(:submission_date)
  .alert
    %strong
      Submit abstracts by
      = time_tag content(:submission_date), l(content(:submission_date), format: :short)
    - if has_content? :submission_text
      = content(:submission_text).try :html_safe
    - if has_content? :submission_url
      = link_to 'Submit an abstract', content(:submission_url), class: [:button, :solid]

- if conference.presentations.any?
  %h2 Presentations
  - conference.presentation_types.where('name LIKE ?', '%Plenary%').each do |presentation_type|
    - unless presentation_type.presentations.empty?
      %h3= presentation_type.name.pluralize
      %div
        - presentation_type.presentations.each do |presentation|
          %article
            %header
              %h3= presentation.title
              %address
                - presentation.presenters.each do |presenter|
                  = "#{presenter.full_name}, #{presenter.institution.name}"
              = time_tag presentation.start_datetime, l(presentation.start_datetime, format: :short)
              = presentation.room_use.room_name
            = presentation.abstract.try(:html_safe)

  - conference.presentation_types.where.not('name LIKE ?', '%Plenary%').each do |presentation_type|
    - unless presentation_type.presentations.empty?
      - cache presentation_type do
        = render presentation_type

- if has_content?(:socials) && content(:socials).structure_items.present?
  %h2 Socials
  %div
    = render content(:socials) do |social|
      %article
        %header
          %h3= social.content(:name) if social.has_content? :name
          = time_tag social.content(:start_time), l(social.content(:start_time), format: :short) if social.has_content? :start_time
          %address= social.content(:location) if social.has_content? :location
        = social.content(:description).try(:html_safe) if social.has_content? :description

- if has_content?(:meetings) && content(:meetings).structure_items.present?
  %h2 Meetings
  %div
    = render content(:meetings) do |meeting|
      %article
        %header
          %h3= meeting.content(:name) if meeting.has_content? :name
          = time_tag meeting.content(:start_time), l(meeting.content(:start_time), format: :short) if meeting.has_content? :start_time
          %address= meeting.content(:location) if meeting.has_content? :location
        = meeting.content(:description).try(:html_safe) if meeting.has_content? :description
